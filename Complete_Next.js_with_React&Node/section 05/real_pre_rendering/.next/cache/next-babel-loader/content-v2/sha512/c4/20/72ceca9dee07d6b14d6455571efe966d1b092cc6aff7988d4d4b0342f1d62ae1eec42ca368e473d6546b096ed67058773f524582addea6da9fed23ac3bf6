{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sangwuuyang/Documents/GitHub/LearnNext.js/Complete_Next.js_with_React&Node/section 05/real_pre_rendering/pages/[pid].js\";\nimport path from \"path\";\nimport fs from \"fs/promises\";\nimport { Fragment } from \"react\";\nexport default function ProductDetailPage(props) {\n  const {\n    loadedProduct\n  } = props; //   if (!loadedProduct) {\n  //     return <div>Loading...</div>;\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loadedProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadedProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\nasync function getData() {\n  const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\");\n  const jsonData = await fs.readFile(filePath, \"utf-8\");\n  const data = JSON.parse(jsonData);\n  return data;\n}\n\nexport async function getStaticProps(context) {\n  const {\n    params\n  } = context;\n  console.log(context);\n  const productId = params.pid;\n  const data = await getData();\n  const product = data.products.find(product => product.id === productId);\n  return {\n    props: {\n      loadedProduct: product\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const data = await getData();\n  const paths = data.products.map(product => ({\n    params: {\n      pid: product.id\n    }\n  }));\n  return {\n    paths,\n    fallback: \"blocking\"\n  };\n}","map":{"version":3,"sources":["/Users/sangwuuyang/Documents/GitHub/LearnNext.js/Complete_Next.js_with_React&Node/section 05/real_pre_rendering/pages/[pid].js"],"names":["path","fs","Fragment","ProductDetailPage","props","loadedProduct","title","description","getData","filePath","join","process","cwd","jsonData","readFile","data","JSON","parse","getStaticProps","context","params","console","log","productId","pid","product","products","find","id","getStaticPaths","paths","map","fallback"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B,CAD+C,CAG/C;AACA;AACA;;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA,gBAAKC,aAAa,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAID,aAAa,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,eAAeC,OAAf,GAAyB;AACvB,QAAMC,QAAQ,GAAGT,IAAI,CAACU,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,MAAzB,EAAiC,oBAAjC,CAAjB;AACA,QAAMC,QAAQ,GAAG,MAAMZ,EAAE,CAACa,QAAH,CAAYL,QAAZ,EAAsB,OAAtB,CAAvB;AACA,QAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAb;AACA,SAAOE,IAAP;AACD;;AAED,OAAO,eAAeG,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,QAAMI,SAAS,GAAGH,MAAM,CAACI,GAAzB;AAEA,QAAMT,IAAI,GAAG,MAAMP,OAAO,EAA1B;AAEA,QAAMiB,OAAO,GAAGV,IAAI,CAACW,QAAL,CAAcC,IAAd,CAAoBF,OAAD,IAAaA,OAAO,CAACG,EAAR,KAAeL,SAA/C,CAAhB;AAEA,SAAO;AACLnB,IAAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAEoB;AADV;AADF,GAAP;AAKD;AAED,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMd,IAAI,GAAG,MAAMP,OAAO,EAA1B;AACA,QAAMsB,KAAK,GAAGf,IAAI,CAACW,QAAL,CAAcK,GAAd,CAAmBN,OAAD,KAAc;AAC5CL,IAAAA,MAAM,EAAE;AACNI,MAAAA,GAAG,EAAEC,OAAO,CAACG;AADP;AADoC,GAAd,CAAlB,CAAd;AAMA,SAAO;AACLE,IAAAA,KADK;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID","sourcesContent":["import path from \"path\";\nimport fs from \"fs/promises\";\nimport { Fragment } from \"react\";\n\nexport default function ProductDetailPage(props) {\n  const { loadedProduct } = props;\n\n  //   if (!loadedProduct) {\n  //     return <div>Loading...</div>;\n  //   }\n\n  return (\n    <Fragment>\n      <h1>{loadedProduct.title}</h1>\n      <p>{loadedProduct.description}</p>\n    </Fragment>\n  );\n}\n\nasync function getData() {\n  const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\");\n  const jsonData = await fs.readFile(filePath, \"utf-8\");\n  const data = JSON.parse(jsonData);\n  return data;\n}\n\nexport async function getStaticProps(context) {\n  const { params } = context;\n  console.log(context);\n  const productId = params.pid;\n\n  const data = await getData();\n\n  const product = data.products.find((product) => product.id === productId);\n\n  return {\n    props: {\n      loadedProduct: product,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const data = await getData();\n  const paths = data.products.map((product) => ({\n    params: {\n      pid: product.id,\n    },\n  }));\n\n  return {\n    paths,\n    fallback: \"blocking\",\n  };\n}\n"]},"metadata":{},"sourceType":"module"}