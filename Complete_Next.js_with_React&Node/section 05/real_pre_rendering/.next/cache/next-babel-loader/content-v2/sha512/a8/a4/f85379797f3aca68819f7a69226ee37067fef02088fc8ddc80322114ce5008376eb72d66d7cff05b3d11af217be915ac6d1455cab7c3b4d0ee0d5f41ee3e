{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sangwuuyang/Documents/GitHub/LearnNext.js/Complete_Next.js_with_React&Node/section 05/real_pre_rendering/pages/[pid].js\";\nexport default function ProductDetailPage(props) {\n  const {\n    loadedProduct\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loadedProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadedProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths(context) {\n  const {\n    params\n  } = context;\n  const productId = params.pid;\n  const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\");\n  const jsonData = await fs.readFile(filePath, \"utf-8\");\n  const data = JSON.parse(jsonData);\n  const product = data.products.find(product => product.id === productId);\n  return {\n    props: {\n      loadedProduct: product\n    }\n  };\n}","map":{"version":3,"sources":["/Users/sangwuuyang/Documents/GitHub/LearnNext.js/Complete_Next.js_with_React&Node/section 05/real_pre_rendering/pages/[pid].js"],"names":["ProductDetailPage","props","loadedProduct","title","description","getStaticPaths","context","params","productId","pid","filePath","path","join","process","cwd","jsonData","fs","readFile","data","JSON","parse","product","products","find","id"],"mappings":";;AAAA,eAAe,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA,gBAAKC,aAAa,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAID,aAAa,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AACA,QAAME,SAAS,GAAGD,MAAM,CAACE,GAAzB;AAEA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,MAAzB,EAAiC,oBAAjC,CAAjB;AACA,QAAMC,QAAQ,GAAG,MAAMC,EAAE,CAACC,QAAH,CAAYP,QAAZ,EAAsB,OAAtB,CAAvB;AACA,QAAMQ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAb;AAEA,QAAMM,OAAO,GAAGH,IAAI,CAACI,QAAL,CAAcC,IAAd,CAAoBF,OAAD,IAAaA,OAAO,CAACG,EAAR,KAAehB,SAA/C,CAAhB;AAEA,SAAO;AACLP,IAAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAEmB;AADV;AADF,GAAP;AAKD","sourcesContent":["export default function ProductDetailPage(props) {\n  const { loadedProduct } = props;\n\n  return (\n    <Fragment>\n      <h1>{loadedProduct.title}</h1>\n      <p>{loadedProduct.description}</p>\n    </Fragment>\n  );\n}\n\nexport async function getStaticPaths(context) {\n  const { params } = context;\n  const productId = params.pid;\n\n  const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\");\n  const jsonData = await fs.readFile(filePath, \"utf-8\");\n  const data = JSON.parse(jsonData);\n\n  const product = data.products.find((product) => product.id === productId);\n\n  return {\n    props: {\n      loadedProduct: product,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}